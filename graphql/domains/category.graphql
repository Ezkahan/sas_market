type Category {
    id: ID!
    name: JSON!
    description: JSON
    icon: Upload
    image: Upload
    icon_url: String
    image_url: String
    parent_id: ID
    category: Category @belongsTo
    categories: [Category] @hasMany
    products: [Product] @hasMany
    banners: [Banner] @hasMany
    category_brands: [Brand]
    visited_count: Int
}

extend type Query {
    category(id: ID! @eq): Category!
        @field(resolver: "GetCategoryProductsQuery")
    categories(orderBy: _ @orderBy(columns: ["id"])): [Category!]! @paginate
    mainCategories(orderBy: _ @orderBy(columns: ["id"])): [Category!]!
        @field(resolver: "GetMainCategoriesQuery")
    subcategories(orderBy: _ @orderBy(columns: ["id"])): [Category!]!
        @field(resolver: "GetSubCategoriesQuery")
    searchCategory(name: String): [Category!]
        @field(resolver: "SearchCategoryQuery")
}

extend type Mutation {
    saveCategory(
        id: ID
        name: JSON!
        description: JSON
        icon: Upload
        image: Upload
        parent_id: ID
    ): Category
        @guard
        @can(ability: "save", model: "Domain\\Category\\Models\\Category")
        @field(resolver: "SaveCategoryMutation")

    deleteCategory(id: ID!): String
        @guard
        @can(ability: "delete", model: "Domain\\Category\\Models\\Category")
        @field(resolver: "DeleteCategoryMutation")
}
