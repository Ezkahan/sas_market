type Cart {
    id: ID!
    user: User @belongsTo
    products: [CartProduct!]! @hasMany
    coupons: [UsedCupons]
    summary: CartSummary
}

type CartProduct {
    product: Product @belongsTo
    quantity: Int
    price: Int
    discount_price: Int
}

type DeliveryCost {
    id: ID
    key: String
    value: JSON
}

type CartSummary {
    totalCost: Float
    totalDiscount: Float
    couponTotal: Float
    total: Float
}

extend type Query {
    getCart: Cart @field(resolver: "GetCartQuery")
    getDeliveryCosts: DeliveryCost @field(resolver: "GetDeliveryCostsQuery")
    myOrderHistory: [Cart] @field(resolver: "GetMyOrderHistoryQuery")
    myActiveOrders: [Cart] @field(resolver: "GetMyActiveOrdersQuery")
}

extend type Mutation {
    addToCart(
        id: ID
        product_id: ID!
        quantity: Int!
        address_id: ID
        note: String
        pay_type: String
        delivery_type: String
    ): Cart @guard @field(resolver: "AddToCartMutation")

    cartCheckout(
        address_id: ID!
        note: String
        pay_type: String!
        delivery_type: String!
    ): Cart @guard @field(resolver: "CartCheckoutMutation")

    removeFromCart(product_id: ID!): String
        @guard
        @field(resolver: "RemoveFromCartMutation")
}
