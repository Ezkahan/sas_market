type User {
    id: ID
    firstname: String
    lastname: String
    photo: String
    birth_day: String # (required, not editable)
    phone: String
    email: String
    password: String
    role_id: String
    gender: String
    device: String
}

type LoginResponse {
    token: String
    message: String
}

type RegisterResponse {
    id: String
    name: String
    email: String
    phone: String
    token: String
}

extend type Query {
    users(orderBy: _ @orderBy(columns: ["id"])): [User!]! @paginate @guard
    user(id: ID @eq): User @find @guard
}

type Mutation {
    login(email: String, phone: String!, password: String!): LoginResponse
        @field(resolver: "LoginMutation")
    register(
        email: String
        phone: String!
        password: String!
        password_confirmation: String!
    ): RegisterResponse @field(resolver: "RegisterMutation")
}
